// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/admin/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/dashboard">> = Specific
  const handler = {} as typeof import("../../src/app/admin/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/email-templates/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/email-templates">> = Specific
  const handler = {} as typeof import("../../src/app/admin/email-templates/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/admin/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/login">> = Specific
  const handler = {} as typeof import("../../src/app/admin/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/cart/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/cart">> = Specific
  const handler = {} as typeof import("../../src/app/cart/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/contact/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/contact">> = Specific
  const handler = {} as typeof import("../../src/app/contact/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/mail-in-service/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/mail-in-service">> = Specific
  const handler = {} as typeof import("../../src/app/mail-in-service/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/qr-payment/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/qr-payment">> = Specific
  const handler = {} as typeof import("../../src/app/qr-payment/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/thank-you/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/thank-you">> = Specific
  const handler = {} as typeof import("../../src/app/thank-you/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/email-templates/preview/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/email-templates/preview">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/email-templates/preview/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/email-templates/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/email-templates">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/email-templates/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/orders/[id]/archive/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/orders/[id]/archive">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/orders/[id]/archive/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/orders/[id]/notes/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/orders/[id]/notes">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/orders/[id]/notes/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/orders/[id]/repair-quote/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/orders/[id]/repair-quote">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/orders/[id]/repair-quote/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/orders/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/orders/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/orders/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/orders/[id]/status/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/orders/[id]/status">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/orders/[id]/status/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/orders/[id]/tracking/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/orders/[id]/tracking">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/orders/[id]/tracking/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/orders/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/orders">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/orders/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/products/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/products/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/products/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/products/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/products">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/products/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/serial-numbers/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/serial-numbers/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/serial-numbers/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/serial-numbers/assign/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/serial-numbers/assign">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/serial-numbers/assign/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/serial-numbers/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/serial-numbers">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/serial-numbers/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/admin/upload/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/upload">> = Specific
  const handler = {} as typeof import("../../src/app/api/admin/upload/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/[...nextauth]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/[...nextauth]">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/[...nextauth]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/contact/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/contact">> = Specific
  const handler = {} as typeof import("../../src/app/api/contact/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/csrf/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/csrf">> = Specific
  const handler = {} as typeof import("../../src/app/api/csrf/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/orders/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/orders">> = Specific
  const handler = {} as typeof import("../../src/app/api/orders/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/products/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/products">> = Specific
  const handler = {} as typeof import("../../src/app/api/products/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../src/app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
